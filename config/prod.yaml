# Production Environment Configuration
environment: prod

# Data Source Configuration
source:
  type: s3
  bucket: ${S3_BUCKET}
  key: data/sales/sales_data.parquet
  access_key: ${AWS_ACCESS_KEY_ID}
  secret_key: ${AWS_SECRET_ACCESS_KEY}
  region: us-east-1

# Data Transformation Configuration
transform:
  type: aggregator
  group_by: ["product_category", "customer_segment"]
  aggregations:
    order_amount: ["sum", "mean", "count"]
    quantity: ["sum", "mean"]
    customer_name: "nunique"
  sort_by: ["order_amount_sum"]
  sort_ascending: false
  limit: 1000
  post_filter: "order_amount_sum > 1000"

# Data Loading Configuration
load:
  type: s3
  bucket: ${S3_OUTPUT_BUCKET}
  key: reports/aggregated_sales_data.parquet
  access_key: ${AWS_ACCESS_KEY_ID}
  secret_key: ${AWS_SECRET_ACCESS_KEY}
  region: us-east-1
  server_side_encryption: AES256
  overwrite: true

# Analytics Configuration
analytics:
  enabled: true
  inspection:
    sample_size: 5
    include_correlations: false
    include_duplicates: false
    include_outliers: false
  quality:
    quality_rules:
      completeness:
        enabled: true
        max_null_percentage: 1.0
      uniqueness:
        enabled: true
        max_duplicate_percentage: 0.1
      validity:
        enabled: true
        column_rules:
          order_amount_sum:
            type: float
            min_value: 0
          customer_name_nunique:
            type: int
            min_value: 1
  reporting:
    dataset_name: "Aggregated Sales Data - Production"
    output_path: "s3://${S3_OUTPUT_BUCKET}/reports/sales_analysis_report.json"
  save_report: true

# Intermediate Data Configuration
intermediates:
  extract: "s3://${S3_TEMP_BUCKET}/temp/extracted_data.parquet"
  transform: "s3://${S3_TEMP_BUCKET}/temp/transformed_data.parquet"
  cleanup: true
  persist_steps: []